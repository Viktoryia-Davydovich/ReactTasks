{"version":3,"sources":["views/Counter/styles.js","views/Counter/index.js","containers/CounterContainer.js","index.js"],"names":["ButtonStyles","crementBtnStyle","background","border","borderRadius","boxShadow","color","height","padding","margin","resetBtnStyle","typographyStyle","Counter","_ref","count","increment","decrement","reset","react_default","a","createElement","Button","style","onClick","Typography","CounterContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setState","state","views_Counter","Component","ReactDOM","render","containers_CounterContainer","document","getElementById"],"mappings":"iOA2BeA,EA3BM,CACjBC,gBAAiB,CACfC,WAAY,mDACZC,OAAQ,EACRC,aAAc,EACdC,UAAW,wCACXC,MAAO,QACPC,OAAQ,GACRC,QAAS,SACTC,OAAQ,aAEVC,cAAe,CACXR,WAAY,kDACZC,OAAQ,EACRC,aAAc,EACdC,UAAW,uCACXC,MAAO,QACPC,OAAQ,GACRC,QAAS,SACTC,OAAQ,aAEZE,gBAAiB,CACbF,OAAQ,YACRJ,UAAW,0CCaJO,EA9BC,SAAAC,GAA0C,IAAxCC,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,UAAWC,EAAsBH,EAAtBG,UAAWC,EAAWJ,EAAXI,MAC7C,OACEC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAOtB,EAAaC,gBAAiBsB,QAASR,GAAtD,aAGAG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAOtB,EAAaC,gBAAiBsB,QAASP,GAAtD,aAGAE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,MAAOtB,EAAaU,cAAea,QAASN,GAApD,UAIFC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAYF,MAAOtB,EAAaW,iBAC7BG,MCwBMW,cAzCX,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAOVX,UAAY,WACRY,EAAKO,SAAS,SAAAC,GAAK,MAAK,CACpBrB,MAAOa,EAAKQ,MAAMrB,MAAQ,MAVhBa,EAclBX,UAAY,WACRW,EAAKO,SAAS,SAAAC,GAAK,MAAK,CACpBrB,MAAOa,EAAKQ,MAAMrB,MAAQ,MAhBhBa,EAoBlBV,MAAQ,WACJU,EAAKO,SAAS,SAAAC,GAAK,MAAK,CACpBrB,MAAM,MAnBVa,EAAKQ,MAAQ,CACTrB,MAAO,GAJGa,wEA4Bd,IAAMD,EAAQ,CACVX,UAAWe,KAAKf,UAChBC,UAAWc,KAAKd,UAChBC,MAAOa,KAAKb,MACZH,MAAOgB,KAAKK,MAAMrB,OAGtB,OACII,EAAAC,EAAAC,cAACgB,EAAYV,UArCMW,aCA/BC,IAASC,OACLrB,EAAAC,EAAAC,cAACoB,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.099d33bd.chunk.js","sourcesContent":["const ButtonStyles = {\r\n    crementBtnStyle: {\r\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n      border: 0,\r\n      borderRadius: 3,\r\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n      color: 'white',\r\n      height: 48,\r\n      padding: '0 30px',\r\n      margin: '15px 30px'\r\n    },\r\n    resetBtnStyle: {\r\n        background: 'linear-gradient(45deg, #6bfec8 5%, #776bfe 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(146, 66, 244, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n        margin: '15px 30px'\r\n    },\r\n    typographyStyle: {\r\n        margin: '15px 30px',\r\n        boxShadow: '0 3px 5px 2px rgba(109, 173, 219, .1)'\r\n    }\r\n};\r\n\r\nexport default ButtonStyles;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport TypoGraphy from '@material-ui/core/Typography';\r\nimport ButtonStyles from './styles';\r\n\r\nconst Counter = ({count, increment, decrement, reset}) => {\r\n  return(\r\n    <div>\r\n    <div>\r\n      <Button style={ButtonStyles.crementBtnStyle} onClick={increment}>\r\n        increment\r\n      </Button>\r\n      <Button style={ButtonStyles.crementBtnStyle} onClick={decrement}>\r\n        decrement\r\n      </Button>\r\n      <Button style={ButtonStyles.resetBtnStyle} onClick={reset}>\r\n        reset\r\n      </Button>\r\n    </div>\r\n    <div>\r\n      <TypoGraphy style={ButtonStyles.typographyStyle}>\r\n        {count}\r\n      </TypoGraphy>\r\n    </div>\r\n  </div>\r\n  )\r\n};\r\n\r\nCounter.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  increment: PropTypes.func.isRequired,\r\n  decrement: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from 'react';\r\nimport Counter from '../views/Counter';\r\n\r\n\r\nclass CounterContainer extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            count: 0,\r\n        };\r\n    }\r\n\r\n    increment = () => {\r\n        this.setState(state => ({\r\n            count: this.state.count + 1\r\n        }))\r\n    }\r\n\r\n    decrement = () => {\r\n        this.setState(state => ({\r\n            count: this.state.count - 1\r\n        }))\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState(state => ({\r\n            count:0\r\n        }))\r\n    }\r\n\r\n    render(){\r\n\r\n        const props = {\r\n            increment: this.increment,\r\n            decrement: this.decrement,\r\n            reset: this.reset,\r\n            count: this.state.count,\r\n        }\r\n\r\n        return (\r\n            <Counter {...props}/>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CounterContainer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport CounterContainer from './containers/CounterContainer'\r\n\r\nReactDOM.render(\r\n    <CounterContainer />,\r\n    document.getElementById('root')\r\n  );"],"sourceRoot":""}